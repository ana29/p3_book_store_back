{
  "swagger" : "2.0",
  "info" : {
    "description" : "A Web Development class project.",
    "version" : "0.0.1",
    "title" : "P3",
    "license" : {
      "name" : "P3",
      "url" : "https://github.com/ana29/p3_book_strore_back"
    }
  },

  "securityDefinitions": {
    "jwt": {
      "type": "apiKey",
      "in": "header",
      "name": "x-access-token"
    }
  },

  "security": [
    {
      "jwt": []
    }
  ],

  "host" : "localhost:3000",
  "basePath" : "/",
  "tags" : [ {
    "name" : "User",
    "description" : "API for users in the system"
  } ],
  "schemes" : [ "https", "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/user" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get all users in system",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized: "
          }
        }
      },
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Create new User in system",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "user",
          "description" : "User that we want to create",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "New user is created",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      }
    },
    "/user/{userId}" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get user with given ID",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of user that we want to find",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "User is found",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Update user with give ID",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of user that we want to find",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User with new values of properties",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User is updated",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "User" ],
        "summary" : "Delete user with given ID",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of user that we want to find",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "User is deleted",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      }
    },
    "/auth" : {
      "post" : {
        "tags" : [ "Auth" ],
        "summary" : "Attempt to log use in system",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "user",
          "description" : "User that we want to login with",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Auth"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User token generated",
            "schema" : {
              "$ref" : "#/definitions/Token"
            }
          },
          "401" : {
            "description" : "Invalid user e-mail or password"
          }
        }
      }
    }
  },
  "definitions" : {
    "User" : {
      "required" : [ "email", "firstName", "lastName", "phone", "role" ],
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "role" : {
          "type" : "string"
        }
      },
      "example" : {
        "firstName" : "User",
        "lastName" : "Name",
        "email" : "user@email.com",
        "phone" : "(99)99999-9999",
        "password" : "userPassword",
        "role" : "CLIENT"
      }
    },
    "Auth" : {
      "required" : [ "email", "password" ],
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      },
      "example" : {
        "email" : "user@email.com",
        "password" : "userPassword"
      }
    },
    "Token" : {
      "required" : [ "x-access-token" ],
      "properties" : {
        "x-access-token" : {
          "type" : "string"
        }
      },
      "example" : {
        "x-access-token" : "eyJhbGciI1NiIsInR5cC.eyJlbWFpbTc2MTEzfQ.jJhI2hgPM4ZV--mSB9tHSY"
      }
    }
  }
}